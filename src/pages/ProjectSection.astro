---
import ProjectCard from "../components/ProjectCard.astro";

interface Project {
  title: string;
  description: string;
  tags: string[];
  image: string;
  link?: string;
  repo?: string;
}

// Props con valor por defecto y validación
const { projects = [] } = Astro.props;
const safeProjects = Array.isArray(projects) ? projects.filter(project => 
  project?.title && 
  project?.description && 
  project?.tags && 
  project?.image
) : [];
---

<section
  id="proyectos"
  class="py-24 px-6 md:px-16 lg:px-24 
         bg-gradient-to-br from-gray-50 via-white to-gray-100 
         dark:from-gray-900 dark:via-gray-950 dark:to-gray-900"
>
  <div class="container mx-auto max-w-6xl">
    
    <!-- Título con efecto elegante -->
    <h2 class="text-4xl md:text-5xl font-bold text-center 
               text-gray-800 dark:text-white mb-12 relative">
      Mis Proyectos
    </h2>

    <!-- Contenedor de proyectos con validación -->
    {safeProjects.length > 0 ? (
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-10">
        {safeProjects.map((project: Project, index: number) => (
          <div 
            class="opacity-0 translate-y-10 animate-fadeIn transition-all duration-500 ease-out"
            style={`animation-delay: ${index * 100}ms`}
          >
            <ProjectCard project={project} />
          </div>
        ))}
      </div>
    ) : (
      <div class="text-center py-12">
        <p class="text-xl text-gray-600 dark:text-gray-400">
          No hay proyectos disponibles en este momento
        </p>
        <p class="text-gray-500 dark:text-gray-500 mt-2">
          Pronto agregaré nuevos proyectos
        </p>
      </div>
    )}
  </div>
</section>

<!-- Efectos CSS -->
<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fadeIn {
    animation: fadeIn 1s ease-out forwards;
  }
</style>