---
const { title, subtitle, buttonText, avatarUrl } = Astro.props;
---

<section
  id="inicio"
  class="relative min-h-screen flex items-center justify-center px-12 md:px-24 lg:px-32 py-20 
         bg-gradient-to-br from-blue-50 via-white to-blue-100 overflow-hidden"
>
  <!-- Decoraciones de fondo -->
  <div class="absolute inset-0 overflow-hidden pointer-events-none">
    <!-- Ondas azules decorativas -->
    <div class="absolute top-20 left-10 w-32 h-32 bg-blue-200/30 rounded-full blur-xl animate-pulse"></div>
    <div class="absolute top-40 right-20 w-24 h-24 bg-blue-300/20 rounded-full blur-lg animate-pulse delay-1000"></div>
    <div class="absolute bottom-32 left-1/4 w-40 h-40 bg-blue-400/15 rounded-full blur-2xl animate-pulse delay-500"></div>
    
    <!-- Líneas decorativas -->
    <div class="absolute top-1/4 right-1/3 w-1 h-32 bg-gradient-to-b from-blue-400/50 to-transparent"></div>
    <div class="absolute bottom-1/4 left-1/3 w-1 h-24 bg-gradient-to-b from-transparent to-blue-500/50"></div>
    
    <!-- Puntos decorativos -->
    <div class="absolute top-1/3 left-1/6 w-2 h-2 bg-blue-500/60 rounded-full animate-bounce"></div>
    <div class="absolute bottom-1/3 right-1/6 w-1.5 h-1.5 bg-blue-600/70 rounded-full animate-bounce delay-700"></div>
  </div>

  <div class="container mx-auto flex flex-col md:flex-row items-center gap-16 md:gap-20 relative z-10">
    
    <!-- Columna 1: Avatar con marco animado -->
    <div class="w-full md:w-1/2 flex justify-center">
      <div class="relative">
        <!-- Marco exterior animado -->
        <div class="absolute inset-0 rounded-full bg-gradient-to-r from-blue-400 via-blue-600 to-blue-400 p-1 animate-spin-slow">
          <div class="w-full h-full rounded-full bg-white"></div>
        </div>
        
        <!-- Marco interior con glow -->
        <div class="relative rounded-full p-3 bg-gradient-to-r from-blue-500/20 to-blue-700/20 backdrop-blur-md shadow-2xl">
          <img
            src={avatarUrl}
            alt="Avatar"
            class="rounded-full w-64 h-64 md:w-80 md:h-80 object-cover shadow-xl 
                   transition-all duration-500 hover:scale-105 hover:shadow-2xl"
          />
        </div>
        
        <!-- Efecto de brillo -->
        <div class="absolute inset-0 rounded-full bg-gradient-to-r from-transparent via-white/20 to-transparent animate-shine"></div>
      </div>
    </div>

    <!-- Columna 2: Texto con animaciones mejoradas -->
    <div class="w-full md:w-1/2 text-center md:text-left space-y-6">
      <!-- Saludo animado -->
      <div class="animate-fadeInUp">
        <span class="text-2xl md:text-3xl font-medium text-blue-600 mb-2 block">
          ¡Hola! Soy
        </span>
      </div>
      
      <!-- Título principal -->
      <div class="animate-fadeInUp delay-200">
        <h1 class="text-5xl md:text-7xl font-extrabold text-gray-800 leading-tight relative">
          {title}
          <span class="absolute -bottom-2 left-0 w-full h-1 bg-gradient-to-r from-blue-500 to-blue-700 rounded-full"></span>
        </h1>
      </div>
      
      <!-- Subtítulo -->
      <div class="animate-fadeInUp delay-400">
        <p class="text-xl md:text-2xl text-gray-600 mt-6 leading-relaxed font-medium">
          {subtitle}
        </p>
      </div>
      
      <!-- Botón principal mejorado -->
      <div class="animate-fadeInUp delay-600 pt-4">
        <a
          href="#contacto"
          class="inline-block px-10 py-4 text-lg font-bold text-white 
                 bg-gradient-to-r from-blue-600 to-blue-700 rounded-full 
                 shadow-lg transition-all duration-300 transform 
                 hover:scale-105 hover:shadow-2xl hover:from-blue-700 hover:to-blue-800
                 relative overflow-hidden group"
        >
          <span class="relative z-10">{buttonText}</span>
          <div class="absolute inset-0 bg-gradient-to-r from-blue-400 to-blue-600 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
        </a>
      </div>
      
      <!-- Indicador de scroll -->
      <div class="animate-bounce pt-8">
        <div class="w-6 h-10 border-2 border-blue-400 rounded-full mx-auto flex justify-center">
          <div class="w-1 h-3 bg-blue-600 rounded-full mt-2 animate-pulse"></div>
        </div>
      </div>
      
    </div>
  </div>

  <div id="minecraft-easteregg" class="fixed bottom-6 left-6 z-50 group cursor-pointer" style="width:32px;height:32px;">
    <img src="/eastereggs/minecraft-grass-block.svg" alt="Bloque de pasto Minecraft" class="transition-transform duration-300 group-hover:scale-110 group-hover:-rotate-6" style="width:32px;height:32px;" />
    <span class="absolute left-10 bottom-2 bg-gray-900 text-white text-xs rounded px-2 py-1 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none shadow-lg">¡Minecraft!</span>
  </div>

  <div id="minecraft-overlay" style="display:none; position:fixed;z-index:9999;top:0;left:0;width:100vw;height:100vh;background:transparent;pointer-events:none;"></div>
</section>

<!-- Animaciones mejoradas -->
<style>
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes spin-slow {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes shine {
    0% {
      transform: translateX(-100%);
    }
    100% {
      transform: translateX(100%);
    }
  }

  .animate-fadeInUp {
    animation: fadeInUp 0.8s ease-out forwards;
    opacity: 0;
  }

  .animate-fadeInUp.delay-200 {
    animation-delay: 0.2s;
  }

  .animate-fadeInUp.delay-400 {
    animation-delay: 0.4s;
  }

  .animate-fadeInUp.delay-600 {
    animation-delay: 0.6s;
  }

  .animate-spin-slow {
    animation: spin-slow 8s linear infinite;
  }

  .animate-shine {
    animation: shine 3s ease-in-out infinite;
  }
</style>

<script is:inline>
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', (e) => {
      e.preventDefault();
      const targetId = anchor.getAttribute('href');
      const targetElement = document.querySelector(targetId);
      
      if (targetElement) {
        targetElement.scrollIntoView({ 
          behavior: 'smooth',
          block: 'start' 
        });
        history.pushState(null, null, targetId);
      }
    });
  });

  // Función para crear sonido de romper tierra de Minecraft
  function createMinecraftSound() {
    const audioContext = new (window.AudioContext || window.webkitAudioContext)();
    const oscillator = audioContext.createOscillator();
    const gainNode = audioContext.createGain();
    
    oscillator.connect(gainNode);
    gainNode.connect(audioContext.destination);
    
    oscillator.frequency.setValueAtTime(200, audioContext.currentTime);
    oscillator.frequency.exponentialRampToValueAtTime(100, audioContext.currentTime + 0.05);
    
    gainNode.gain.setValueAtTime(0.8, audioContext.currentTime);
    gainNode.gain.exponentialRampToValueAtTime(0.01, audioContext.currentTime + 0.05);
    
    oscillator.start(audioContext.currentTime);
    oscillator.stop(audioContext.currentTime + 0.05);
  }

  const egg = document.getElementById('minecraft-easteregg');
  const overlay = document.getElementById('minecraft-overlay');
  if (egg && overlay) {
    egg.onclick = () => {
      console.log('Easter egg click detectado');
      // Configuración de la cuadrícula
      const cols = 20;
      const rows = 12;
      const blockW = Math.ceil(window.innerWidth / cols);
      const blockH = Math.ceil(window.innerHeight / rows);
      overlay.innerHTML = '';
      overlay.style.display = 'block';
      overlay.style.background = 'transparent';
      overlay.style.pointerEvents = 'all';
      console.log('Overlay mostrado, creando bloques...');
      // Crear bloques
      for (let y = 0; y < rows; y++) {
        for (let x = 0; x < cols; x++) {
          const block = document.createElement('div');
          block.style.position = 'absolute';
          block.style.width = blockW + 'px';
          block.style.height = blockH + 'px';
          block.style.left = (x * blockW) + 'px';
          block.style.top = (y * blockH) + 'px';
          block.style.background = `url('/eastereggs/minecraftdirt.webp') center/cover no-repeat`;
          block.style.opacity = '1';
          block.style.transform = 'scale(1)';
          block.style.transition = 'opacity 0.2s ease-out, transform 0.2s ease-out';
          block.style.pointerEvents = 'none';
          overlay.appendChild(block);
        }
      }
      let i = 0;
      const blocks = Array.from(overlay.children);
      const total = blocks.length;
      console.log('Total de bloques creados:', total);
      function animateBlock() {
        if (i < total && blocks[i]) {
          // Mejorar la animación visual
          blocks[i].style.opacity = '0';
          blocks[i].style.transform = 'scale(0.8)';
          
          // Reproducir sonido de romper tierra (solo cada 3 bloques para evitar saturación)
          if (i % 3 === 0) {
            try {
              createMinecraftSound();
            } catch (e) {
              console.log('Error reproduciendo sonido:', e);
            }
          }
          
          setTimeout(() => { 
            if (blocks[i]) {
              blocks[i].style.display = 'none';
            }
          }, 200);
          
          if (i % 20 === 0) console.log('Animando bloque', i);
          i++;
          setTimeout(animateBlock, 15); // Aumentar delay para mejor visualización
        } else {
          console.log('Animación terminada.');
          setTimeout(() => { overlay.style.display = 'none'; }, 300);
        }
      }
      animateBlock();
    };
  }
</script>
