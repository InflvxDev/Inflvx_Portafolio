---
const links = [
  { name: "Proyectos", path: "#proyectos" },
  { name: "Contacto", path: "#contacto" },
];
---

<nav id="navbar" class="fixed top-0 w-full z-50 backdrop-blur-md bg-white/80 dark:bg-gray-900/80 transition-colors">
  <div class="container mx-auto flex justify-between py-4 px-6">
    
    <!-- Nombre a la izquierda -->
    <a href="#inicio" class="text-gray-800 dark:text-white text-xl font-bold tracking-wide hover:text-blue-600 dark:hover:text-blue-400 transition-all">
      InflvxDev
    </a>

    <!-- Enlaces y toggle -->
    <div class="flex items-center space-x-6">
      <ul class="flex space-x-6">
        {links.map((link, index) => (
          <li class="relative">
            <a
              href={link.path}
              class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-all font-semibold text-lg tracking-wide px-3 py-2 rounded-lg"
            >
              {link.name}
            </a>
            {index < links.length - 1 && (
              <span class="absolute right-[-12px] top-1/2 transform -translate-y-1/2 w-[2px] h-4 bg-gray-400/40 dark:bg-gray-600/60"></span>
            )}
          </li>
        ))}
      </ul>

      <!-- Botón tema -->
      <button id="theme-toggle" class="p-2 rounded-lg text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700 transition-all" aria-label="Cambiar tema">
        <svg id="icon-sun" class="hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
        </svg>
        <svg id="icon-moon" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
          <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
        </svg>
      </button>

      
    </div>
  </div>
</nav>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    // Elementos del DOM
    const themeToggle = document.getElementById("theme-toggle");
    const iconSun = document.getElementById("icon-sun");
    const iconMoon = document.getElementById("icon-moon");
    
    // Función para aplicar el tema
    const applyTheme = (isDark) => {
      if (isDark) {
        document.documentElement.classList.add("dark");
        localStorage.setItem("theme", "dark");
      } else {
        document.documentElement.classList.remove("dark");
        localStorage.setItem("theme", "light");
      }
      iconSun.classList.toggle("hidden", !isDark);
      iconMoon.classList.toggle("hidden", isDark);
    };
  
    // Cargar tema inicial - versión mejorada
    const loadInitialTheme = () => {
      const savedTheme = localStorage.getItem("theme");
      
      // Prioridad 1: Tema guardado en localStorage
      if (savedTheme) {
        return savedTheme === "dark";
      }
      
      // Prioridad 2: Preferencia del sistema (solo si no hay en localStorage)
      return window.matchMedia("(prefers-color-scheme: dark)").matches;
    };
  
    // Aplicar tema inicial
    applyTheme(loadInitialTheme());
  
    // Evento del botón - versión simplificada
    themeToggle.addEventListener("click", () => {
      const isCurrentlyDark = document.documentElement.classList.contains("dark");
      applyTheme(!isCurrentlyDark);
    });
  
    // Resto de tu código (scroll effects, smooth scrolling, etc.)
    window.addEventListener("scroll", () => {
      const navbar = document.getElementById("navbar");
      navbar.classList.toggle("shadow-lg", window.scrollY > 50);
      navbar.classList.toggle("bg-white/90", window.scrollY > 50 && !document.documentElement.classList.contains("dark"));
      navbar.classList.toggle("dark:bg-gray-900/90", window.scrollY > 50 && document.documentElement.classList.contains("dark"));
    });
  
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
      anchor.addEventListener("click", function(e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute("href"));
        if (target) {
          target.scrollIntoView({ behavior: "smooth" });
          history.pushState(null, null, this.href);
        }
      });
    });
  });
  </script>